/*!
 * Copyright 2020 Haulmont.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@mixin he-slider($primary-stylename: v-slider) {
  @include he-slider-style();

  /* Global size */

  $v-slider-track-size--small: round($v-unit-size--small / 8);
  $v-slider-handle-width--small: round($v-unit-size--small / 1.8);
  $v-slider-handle-height--small: round($v-unit-size--small / 1.8);

  $v-slider-track-size--large: round($v-unit-size--large / 8);
  $v-slider-handle-width--large: round($v-unit-size--large / 1.8);
  $v-slider-handle-height--large: round($v-unit-size--large / 1.8);

  &.small {
    @include he-slider-size-style($primary-stylename : $primary-stylename,
                                  $unit-size         : $v-unit-size--small,
                                  $track-size        : $v-slider-track-size--small,
                                  $handle-width      : $v-slider-handle-width--small,
                                  $handle-height     : $v-slider-handle-height--small);
  }

  &.large {
    @include he-slider-size-style($primary-stylename : $primary-stylename,
                                  $unit-size         : $v-unit-size--large,
                                  $track-size        : $v-slider-track-size--large,
                                  $handle-width      : $v-slider-handle-width--large,
                                  $handle-height     : $v-slider-handle-height--large);
  }

  /* Size within a container */

  .small {
    @include he-slider-size-style($primary-stylename : $primary-stylename,
                                  $unit-size         : $v-unit-size--small,
                                  $track-size        : $v-slider-track-size--small,
                                  $handle-width      : $v-slider-handle-width--small,
                                  $handle-height     : $v-slider-handle-height--small);
  }

  .medium {
    @include he-slider-size-style($primary-stylename : $primary-stylename,
                                  $unit-size         : $v-unit-size,
                                  $track-size        : $v-slider-track-size,
                                  $handle-width      : $v-slider-handle-width,
                                  $handle-height     : $v-slider-handle-height);
  }

  .large {
    @include he-slider-size-style($primary-stylename : $primary-stylename,
                                  $unit-size         : $v-unit-size--large,
                                  $track-size        : $v-slider-track-size--large,
                                  $handle-width      : $v-slider-handle-width--large,
                                  $handle-height     : $v-slider-handle-height--large);
  }

  /* Own size */

  // TODO: gg, possibly implement
}

@mixin he-slider-style($primary-stylename: v-slider) {
  .#{$primary-stylename}-base {
    @include he-progressbar-track-style();

    &:before {
      border-color: var(--primary-color);
    }

    &:after {
      @include he-progressbar-indicator-style();
    }
  }

  .#{$primary-stylename}-handle {
    &:before {
      background: var(--slider-handle-color);
    }

    &:after {
      @include opacity(1);

      border: he-border($color: --slider-handle-border-color);
    }
  }

  .#{$primary-stylename}:focus {
    .#{$primary-stylename}-handle:after {
      @include he-focus-style();
    }

    &.v-readonly {
      .#{$primary-stylename}-handle:after {
        @include he-focus-style(--border-dim-focused-color);
      }
    }
  }

  @include he-tooltip(#{$primary-stylename}-feedback);

  .#{$primary-stylename}-vertical {
    .#{$primary-stylename}-base {
      @include he-progressbar-track-style();

      &:before {
        border-color: var(--primary-color);
      }

      &:after {
        @include he-progressbar-indicator-style();
      }
    }
  }

  @include he-slider-size-style($primary-stylename: $primary-stylename);
}

@mixin he-slider-size-style($primary-stylename    : v-slider,
                            $unit-size            : $v-unit-size,
                            $track-size           : $v-slider-track-size,
                            $handle-width         : $v-slider-handle-width,
                            $handle-height        : $v-slider-handle-height,
                            $handle-border-radius : null) {
  // Round to an even number
  $track-size: $track-size + $track-size % 2;
  $handle-width: $handle-width + $handle-width % 2;
  $handle-height: $handle-height + $handle-height % 2;

  $base-margin-vertical: round(($unit-size - $track-size) / 2);
  $base-margin-horizontal: round($handle-width / 2);

  @if ($handle-border-radius == null) {
    $handle-border-radius: ceil($handle-width / 2);
  }

  .#{$primary-stylename}-base {
    min-width: $unit-size * 2;
    height: $track-size;
    margin: $base-margin-vertical $base-margin-horizontal;

    &:before {
      top: $base-margin-vertical;
      bottom: $base-margin-vertical;
      left: $base-margin-horizontal;
    }
  }

  .#{$primary-stylename}-handle {
    margin-top: round(($unit-size - $track-size) / -2);

    &:before,
    &:after {
      padding: 0;
      width: $handle-width;
      height: $handle-height;
      border-radius: $handle-border-radius;
      margin-top: round(($unit-size - $handle-height) / 2);
      margin-left: round($handle-width/-2);
    }
  }

  /* Vertical */

  .#{$primary-stylename}-vertical {
    padding: round($handle-width / 2) 0;
    height: $unit-size * 2 + $handle-width; // Effectively min-height

    .#{$primary-stylename}-base {
      width: $track-size;
      height: 100% !important;
      min-width: 0;
      margin: 0 round(($unit-size - $track-size) / 2);

      &:before {
        top: auto;
        bottom: $base-margin-horizontal;
        left: $base-margin-vertical;
        right: $base-margin-vertical;
        width: auto;
        height: $v-border-radius * 2;
      }

      &:after {
        height: 101%;
        margin-left: 0;
      }
    }

    .#{$primary-stylename}-handle {
      height: .1px;
      width: $unit-size;

      &:before,
      &:after {
        width: $handle-height;
        height: $handle-width;
        margin-top: round($handle-width/-2);
        margin-left: round(($handle-height - $track-size)/-2);
      }
    }
  }
}